import {
  Input as ChakraInput,
  InputProps as ChakraInputProps,
} from "@chakra-ui/react";
import {
  CloseOutline24Icon,
  SearchOutline24Icon,
} from "@vygruppen/spor-icon-react";
import React, { forwardRef, useId } from "react";
import { InputLeftElement, InputRightElement } from ".";
import { createTexts, useTranslation } from "..";
import { InputGroup } from "../components/ui/input-group";
import { Field } from "../components/ui/field";
import { IconButton } from "../button/IconButton";

export type SearchInputProps = Exclude<
  ChakraInputProps,
  "variant" | "size" | "leftIcon" | "rightIcon"
> & {
  /** Optional label. Defaults to the localized version of "search" */
  label?: string | React.ReactNode;
  /** Callback for when the clear button is clicked */
  onReset?: () => void;
};
/** Simple search input component.
 *
 * Includes a search icon, a localized label and a reset button.
 */
export const SearchInput = forwardRef<HTMLInputElement, SearchInputProps>(
  (props, ref) => {
    const { t } = useTranslation();
    const showClearButton = props.onReset && Boolean(props.value);
    const autoGeneratedId = useId();
    const inputId = props.id ?? props?.id ?? autoGeneratedId;
    return (
      <InputGroup position="relative">
        <>
          <InputLeftElement>
            <SearchOutline24Icon />
          </InputLeftElement>
          <Field label={props.label ?? t(texts.label)}>
            <ChakraInput
              paddingLeft={7}
              paddingRight={7}
              {...props}
              id={inputId}
              type="search"
              css={{
                "&::-webkit-search-cancel-button": {
                  WebkitAppearance: "none",
                },
              }}
              ref={ref}
              placeholder=" " // This is needed to make the label work as expected
              data-attachable
            />
          </Field>
          {showClearButton && (
            <InputRightElement width="fit-content">
              <IconButton
                variant="ghost"
                type="button"
                size="sm"
                marginRight={1}
                aria-label={t(texts.reset)}
                icon={<CloseOutline24Icon />}
                onClick={props.onReset}
              />
            </InputRightElement>
          )}
        </>
      </InputGroup>
    );
  },
);

const texts = createTexts({
  label: {
    nb: "Søk",
    nn: "Søk",
    sv: "Sök",
    en: "Search",
  },
  reset: {
    nb: "Tøm søkefeltet",
    nn: "Tøm søkefelt",
    sv: "Rensa sökrutan",
    en: "Reset search field",
  },
});
