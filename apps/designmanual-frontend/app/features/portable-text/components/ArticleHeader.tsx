import {
  InformationOutline30Icon,
  RobotOutline30Icon,
} from "@vygruppen/spor-icon-react";
import {
  Box,
  createTexts,
  Flex,
  Heading,
  Stack,
  Text,
  useTranslation,
} from "@vygruppen/spor-react";

import { type SanityImage } from "~/features/cms/sanity/query";

import { ResponsiveImage } from "./ResponsiveImage";

type ArticleHeaderProps = {
  title: string;
  subtitle: string;
  illustration?: SanityImage;
  isFallbackLanguage?: boolean;
  isAiGenerated?: boolean;
};

export function ArticleHeader({
  title,
  subtitle,
  illustration,
  isFallbackLanguage,
  isAiGenerated,
}: ArticleHeaderProps) {
  const { t } = useTranslation();
  const hasIllustration = !!(illustration?.url || illustration?.asset);

  return (
    <Stack as="section" marginY={4}>
      <Flex gap={[0, 4, null, 8]} data-testid="article-header">
        <Box flex={illustration ? [1, 4 / 5, null, 7 / 10] : 1}>
          <Heading
            as="h1"
            fontWeight="normal"
            color="darkTeal"
            marginBottom={isFallbackLanguage ? 2 : 3}
            variant="xxl"
            data-testid="page-title"
            autoId
          >
            {title}
          </Heading>
          {isFallbackLanguage && (
            <Flex gap={2} alignItems="center">
              <InformationOutline30Icon />
              <Text variant="sm">
                Innhaldet er berre tilgjengeleg på bokmål.
              </Text>
            </Flex>
          )}
          {isAiGenerated && (
            <Flex gap={2} alignItems="center" marginBottom={2}>
              <RobotOutline30Icon />

              <Text variant="sm">{t(texts.aiInformationText)}</Text>
            </Flex>
          )}
          <Text variant="md" maxWidth="936px">
            {subtitle}
          </Text>
        </Box>
        {hasIllustration && (
          <Flex
            flex={[0, 2 / 6, null, 3 / 10]}
            align="center"
            justify="center"
            paddingTop={[2, 3, null, 4]}
          >
            <ResponsiveImage image={illustration} size="sm" format="svg" />
          </Flex>
        )}
      </Flex>
    </Stack>
  );
}

const texts = createTexts({
  aiInformationText: {
    nb: "Teksten er generert av Bing Chat og er gjennomgått av Vys redaktører.",
    nn: "Teksten er generert av Bing Chat og er gjennomgått av Vy sine redaktørar.",
    en: "The text is generated by Bing Chat and has been reviewed by Vys editors.",
    sv: "Texten är genererad av Bing Chat och har granskats av Vys redaktörer.",
  },
});
